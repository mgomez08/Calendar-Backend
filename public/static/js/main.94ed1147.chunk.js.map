{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","preventDefault","validator","isEmail","email","password","a","resp","json","ok","setItem","Date","getTime","uid","msg","Swal","fire","onChange","placeholder","length","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1h","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","contentLabel","overlayClassName","momentStartDate","momentEndDate","isSameOrAfter","trim","id","console","log","getState","_id","startEventAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","startAccessor","endAccessor","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94ed1147.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data ),\r\n        })\r\n    }\r\n\r\n}\r\nexport const fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data ),\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","export const types = {\r\n\r\n    //UI\r\n    uiOpenModal: '[UI]Open Modal',\r\n    uiCloseModal: '[UI]Close Modal',\r\n\r\n    //Events calendar\r\n    eventStartAddNew: '[EVENTS]Start Add New',\r\n    eventAddNew: '[EVENTS]Add New',\r\n    eventSetActive: '[EVENTS]Set Active',\r\n    eventClearNoteActive: '[EVENTS]Clear Note Active',\r\n    eventUpdated: '[EVENTS]Updated Event',\r\n    eventDeleted: '[EVENTS]Deleted Event',\r\n    eventLoaded: '[EVENTS]Events Loaded',\r\n    eventLogout: '[EVENTS]Event Logout',\r\n\r\n    //Auth\r\n    authChekingFinish: '[AUTH]Finish Cheking Login State',\r\n    authStartLogin: '[AUTH]Start Login',\r\n    authLogin: '[AUTH]Login',\r\n    authStartRegister: '[AUTH]Start Register',\r\n    authStartTokenRefresh: '[AUTH]Start Token Refresh',\r\n    authLogout: '[AUTH]Logout'\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = ( events = []) => {\r\n\r\n    return events.map( (event) => ({\r\n        ...event,\r\n        end: moment( event.end ).toDate(),\r\n        start: moment( event.start ).toDate(),\r\n    })\r\n  );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startEventAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            if ( body.ok ) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id:  uid,\r\n                    name\r\n                }\r\n                dispatch( eventAddNew( event ));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst  eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const  eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const  eventClearActiveEvent = () => ({\r\n    type: types.eventClearNoteActive,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if( body.ok ){\r\n                dispatch( eventUpdated( event ));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst  eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n        const body = await resp.json();\r\n        if( body.ok ){\r\n            dispatch( eventDeleted());\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\nconst  eventDeleted = (event) => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.events);\r\n            dispatch( eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout,\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }) );\r\n        }else if(body.msg){\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken('auth/register', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }) );\r\n        }else if(body.msg){\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchWithToken('auth/refreshToken');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }) );\r\n        }else{\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authChekingFinish\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues(newFormState);\r\n    }\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport validator from 'validator';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    });\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail:'',\r\n        rPassword1:'',\r\n        rPassword2:'',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        if( !lEmail || !lPassword ){\r\n            return Swal.fire('Error', 'Correo y contraseña son requeridos', 'error')\r\n        }else if( !validator.isEmail(lEmail) ){\r\n            return Swal.fire('Error', 'Debe ingresar un correo válido', 'error')\r\n        }\r\n        dispatch(startLogin(lEmail, lPassword));\r\n\r\n    }\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        if( !rName || !rEmail || !rPassword1 || !rPassword2 ){\r\n            return Swal.fire('Error', 'Todos los campos son obligatorios', 'error')\r\n        }\r\n        else if( !validator.isEmail(rEmail) ){\r\n            return Swal.fire('Error', 'Debe ingresar un correo válido', 'error')\r\n        }\r\n        else if( rPassword1.length <= 5 || rPassword2.length <= 5  ){\r\n            return Swal.fire('Error', 'Las contraseñas deben tener al menos 6 carácteres', 'error')\r\n        }\r\n        else if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth);\r\n    \r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n            <i className=\"fas fa-sign-out-alt\">\r\n            </i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user} = event;\r\n    return (\r\n        <div>\r\n            <span>{ title }</span>\r\n            <br />\r\n            <strong>-{ user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React,{ useState,  useEffect  } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { startEventAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top             : '50%',\r\n        left            : '50%',\r\n        right           : 'auto',\r\n        bottom          : 'auto',\r\n        marginRight     : '-50%',\r\n        transform       : 'translate(-50%, -50%)',\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1h =  now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1h.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n    \r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1h.toDate());\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const momentStartDate = moment( start );\r\n        const momentEndDate = moment( end );\r\n        if(momentStartDate.isSameOrAfter(momentEndDate)){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');    \r\n        }\r\n        if(title.trim().length < 2){\r\n            return Swal.fire('Error', 'El titulo debe ter al menos dos carácteres', 'error');\r\n        }\r\n        //ToDo: realizar guardado en la base de datos\r\n        if( activeEvent ){\r\n            dispatch(eventStartUpdate( formValues ));\r\n        }else{\r\n            dispatch(startEventAddNew( formValues ));\r\n        }\r\n        closeModal();\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            contentLabel=\"Example\"\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n        <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n        <hr />\r\n        <form \r\n        className=\"container\"\r\n        onSubmit={ handleSubmit }>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n                <DateTimePicker \r\n                    onChange={ handleStartDateChange }\r\n                    value={ dateStart }\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                <DateTimePicker \r\n                    onChange={ handleEndDateChange }\r\n                    value={ dateEnd }\r\n                    minDate={dateStart}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    value={notes}\r\n                    onChange={handleInputChange}\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                ></textarea>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n\r\n        </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        \r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n    return (\r\n        <button \r\n        className=\"btn btn-danger fab-danger\"\r\n        onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\">\r\n                <span> Delete</span>\r\n            </i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar  /> \r\n            <Calendar \r\n                localizer={ localizer }\r\n                events={ events }\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    // const {location:{pathname, search}} = rest;\r\n    // localStorage.setItem('lastPath', pathname+search);\r\n    return (\r\n        <Route \r\n        {...rest} \r\n        component={ (props) =>(\r\n            ( isLoggedIn )\r\n            ? <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n        {...rest} \r\n        component={ (props) =>(\r\n            ( isLoggedIn )\r\n            ? <Redirect to=\"/\" />\r\n            : <Component {...props} />\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { \r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch( startChecking());\r\n    }, [dispatch])\r\n    if( checking ){\r\n        return <h5>Espere...</h5>\r\n    }else{\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute exact\r\n                         path=\"/login\" \r\n                         component={LoginScreen} \r\n                         isLoggedIn={ !!uid }                             \r\n                         />\r\n                        <PrivateRoute \r\n                         exact \r\n                         path=\"/\" \r\n                         component={CalendarScreen} \r\n                         isLoggedIn={ !!uid }      \r\n                        />\r\n    \r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearNoteActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => (event.id === action.payload.id) ? action.payload : event\r\n                )\r\n            } \r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => (event.id !== state.activeEvent.id) \r\n                ),\r\n                activeEvent: null\r\n            }   \r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload],\r\n            } \r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }   \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    calendar: calendarReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles.css';\r\nReactDOM.render(\r\n    <CalendarApp />,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}